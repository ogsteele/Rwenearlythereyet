install.packages(vembedr)
install.packages("vembedr")
# first we need to install the package
install.packages("ggplot2")
# once the package is installed we then need to load it
library(ggplot2)
# now we can use the package
set.seed(1)
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
ds <- do.call(rbind, lapply(split(df, df$gp), function(d) {
data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))
# The summary data frame ds is used to plot larger red points on top
# of the raw data. Note that we don't need to supply `data` or `mapping`
# in each layer because the defaults from ggplot() are used.
ggplot(df, aes(gp, y)) +
geom_point() +
geom_point(data = ds, aes(y = mean), colour = 'red', size = 3)
install.packages("ggplot2")
View(df)
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
View(df)
devEMF::emf(file = "figures/intrinsic/raw/fall_fig.emf", emfPlus = FALSE)
``` {r}
set.seed(1)
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
ds <- do.call(rbind, lapply(split(df, df$gp), function(d) {
data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))
# The summary data frame ds is used to plot larger red points on top
# of the raw data. Note that we don't need to supply `data` or `mapping`
# in each layer because the defaults from ggplot() are used.
myGraph <- ggplot(df, aes(gp, y)) +
geom_point() +
geom_point(data = ds, aes(y = mean), colour = 'red', size = 3)
# the graph can then be loaded by calling the myGraph object
myGraph
devEMF::emf(file = "exampleplot.emf", emfPlus = FALSE)
myGraph
dev.off()
png(file = "exampleplot.png", width=600, height = 350)
myGraph
dev.off()
